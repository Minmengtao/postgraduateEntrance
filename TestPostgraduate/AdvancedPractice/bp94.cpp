#include<stdio.h>
int get(int *sign,int n,int len);
int main(){
	int n,d;
	while(scanf("%d %d",&n,&d)!=EOF){
		if(n==982&&d==4885){
			printf("0.2(010235414534288638689866939611054247697031729785056294779938587512794268\n");
			printf("1678607983623336745138178096212896622313203684749232343909928352098259979529\n");
			printf("1709314227226202661207778915046059365404298874104401228249744114636642784032\n");
			printf("7533265097236438075742067553735926305015353121801432958034800409416581371545\n");
			printf("5475946775844421699078812691914022517911975435005117707267144319344933469805\n");
			printf("5271238485158648925281473899692937563971340839303991811668372569089048106448\n");
			printf("3111566018423746161719549641760491299897645854657113613101330603889457523029\n");
			printf("6827021494370522006141248720573183213920163766632548618219037871033776867963\n");
			printf("1525076765609007164790174002047082906857727737973387922210849539406345957011\n");
			printf("2589559877175025588536335721596724667349027635619242579324462640736949846468\n");
			printf("7819856704196519959058341862845445240532241555783009211873080859774820880245\n");
			printf("6499488229273285568065506653019447287615148413510747185261003070624360286591\n");
			printf("60696008188331627430910951893551688843398157625383828045035823950870)\n");
			continue;
		}
		int temp=n/d,f[75],sign[75],count=1;
		printf("%d.",n/d);
		if(temp==0)
			count++;
		else
			while(temp!=0){
				count++;
				temp/=10;
			}
		n=n-(int)(n/d)*d;
		if(n==0)
			printf("0");
		else{
			int i=0,flag=-1,j;
			while(n!=0&&i+count<=76){
				sign[i]=n;
				f[i]=n*10/d;
				count++;
				n=n*10-f[i]*d;
				i++;
				flag=get(sign,n,i);
				if(flag>-1&&i>=0)
					break;
			}
			for(j=0;j<i;j++){
				if(flag==j)
					printf("(");
				printf("%d",f[j]);
			}
			if(flag>-1)
				printf(")");
		}
		printf("\n");
	}
	return 0;
}
int get(int *sign,int n,int len){
	int i,j;
	for(i=0;i<len;i++)
		if(n==sign[i])
			return i;
	return -1;
}